

#include<iostream.h>  

struct node 

{ 

int data; 

node *next; 

};  


node *Initnode(int n) 

{ 


node *head,*p; 

head=p=new node; 
for(int i=1;i<=n-1;i++) 

{ 
                                                                                                                                                                                                                           
p->data=1; 


//

将每个节点的值赋为

1

，表示该节点的人未被提出

 


p->next=new node;  

//

节点指针指向新创建的节点

p=p->next; 

 

}
 

p->data=1; 

 
p->next=head;  

 

//将最后一个节点的指针指向头结点，以便形成循环链表

 
return head; 

}  


void Print(node *head,int n) 

//(

节点起始位置，总共要显示人数

)
{ 
node *q; 

q=head; 

//将q节点指向头结点
 
for(int i=0;i<n;i++) 
 
{ 

cout<<q->data; 
 
//

输出当次报数后所剩人的排队情况


q=q->next; 

} 

cout<<endl; 

}  

void Done(node *head,int n,int m ,int k) 


{ 
//(

节点起始位置，总人数，报数，提出人数

)

node *p; 
p=head; 
for(int j=0;j<k;j++)  
{ 
for(int i=1;i<m;i++) 

//该循环为报数的次数

{ 
while(p->data==0) 

//

如果该节点已经被踢出了，则从下一个没被踢出的节点数

 

{ 
p=p->next; 

} 


p=p->next; 

 

//每数一次，指针指向下一个节点

} 

 
while(p->data==0) 

 

//

如果该节点已经被踢出了，则从下一个没被踢出的节点数

{ 

 
p=p->next; 


} 

 
p->data=0; 

 
//

将报数为m的人提出

 
cout<<"第"<<(k+1)<<"次报数结果为："<<'\t'; 

Print(head,n); 

//

显示每次报数后的情况
 
} 

}  

/***************************************************************** 

函数功能：

主函数

*****************************************************************/ 

void main() 

{ 

node *head; 

int a=0; 

int m,n,l; 

cout<<"请分别输入总人数N，每次报数M，及踢出L个人："; 

cin>>n>>m>>l; 

head=Initnode(n); 

//

头结点指向初始化好的循环链表

Done(head,n,m,l); 


//

开始报数踢人

 

}  
